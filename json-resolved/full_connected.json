{
  "swagger": "2.0",
  "info": {
    "description": "These are OIC Integration APIs for Brewer Management",
    "version": "1.0.1",
    "title": "AMP OIC APIs",
    "contact": {
      "email": "bryan.arndorfer_ex@kdrp.com"
    }
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/ic/api/1.0",
  "tags": [
    {
      "name": "User Management",
      "description": "Integration name AMSUserlist - get, update, reset Password, deactivate user operations"
    },
    {
      "name": "Brewer Management",
      "description": "Operations available to regular developers"
    },
    {
      "name": "Account Management",
      "description": "Integration name AMSGetkadaccountnamefilter get"
    },
    {
      "name": "Consumption and Alerts",
      "description": "Integration covering alters functionalities"
    },
    {
      "name": "Dashboard",
      "description": "Integration covering Dashboard APIs"
    },
    {
      "name": "File Management",
      "description": "Integration covering File Management"
    },
    {
      "name": "Media Management",
      "description": "Integration covering Media Management"
    },
    {
      "name": "Install",
      "description": "Integration covering brewer installation related API's"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
        "/UserList": {
      "get": {
        "tags": [
          "User Management",
          "getUserList"
        ],
        "summary": "get User List",
        "description": "By passing in the appropriate options, you can search for\navailable user lsit in the system\n",
        "operationId": "UserList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
           {
            "name": "requestedAccountType",
            "in": "query",
            "description": "pass type(Distributor or Business) Account to filter results on user",
            "required": false,
            "type": "string"
          },
          {
            "name": "KADAccountID",
            "in": "query",
            "description": "pass one or more optional userId string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "BusinessAccountID",
            "in": "query",
            "description": "pass one or more optional userId string for looking up user",
            "required": false,
            "type": "string"
          },
           {
            "name": "userId",
            "in": "query",
            "description": "pass one or more optional userId string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "pass one or more optional First Name string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "pass one or more optional Last Name string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "pass one or more optional Role string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterStatus",
            "in": "query",
            "description": "pass one or more optional Status string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdFromDt",
            "in": "query",
            "description": "pass an optional From Date string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdToDt",
            "in": "query",
            "description": "pass an optional To Date string for looking up user",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
                "$ref": "#/definitions/UserList"
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/AMPUser": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "get List of Users",
        "description": "By passing in the appropriate options, you can search for\navailable user lsit in the system\n",
        "operationId": "getUserList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "pass the accountId of the Business Account or Partner Account to retrieve list of users",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterUserId",
            "in": "query",
            "description": "pass an optional userID string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterFN",
            "in": "query",
            "description": "pass one or more optional First Name string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterLN",
            "in": "query",
            "description": "pass one or more optional Last Name string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterRole",
            "in": "query",
            "description": "pass one or more optional Role string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterStatus",
            "in": "query",
            "description": "pass one or more optional Status string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterCreatedFromDt",
            "in": "query",
            "description": "pass an optional From Date string for looking up user",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterCreatedToDt",
            "in": "query",
            "description": "pass an optional To Date string for looking up user",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserList"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Create New AMP User",
        "description": "This API is to create new AMP User\n",
        "operationId": "createAMPUser",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "in": "body",
            "name": "AMPUser",
            "description": "submit New AMP User Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/AMPUser/{userId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "get User Info",
        "description": "This API is to get User Details\n",
        "operationId": "getUserInfo",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "pass userId to Look up user in OEC",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User Record Not found"
          },
          "500": {
            "description": "Server Issue"
          }
        }
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update AMP User",
        "description": "This API is to update an existing AMP User\n",
        "operationId": "updateAMPUser",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "pass userId to update user in OEC",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AMPUser",
            "description": "submit AMP User Info to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/deactivateUser/{userId}": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Remove User from Account",
        "description": "API to remove a user from an account. If user has no active affiliation to another account, user's access is deactivated from AMP Portal",
        "operationId": "deactivateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "in": "body",
            "name": "UserAcc",
            "description": "submit user deactivation request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAccess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/resetPassword/{oktaId}": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "resetPassword",
        "description": "Reset password for user",
        "operationId": "resetPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "name": "oktaId",
            "in": "path",
            "description": "pass the Okta Id of the User for whom to reset password",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "pass the UserObject",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/resendInvite/{userId}": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "resend Invite for  User ",
        "description": "By passing in the appropriate options, you can search for\navailable user lsit in the system\n",
        "operationId": "resendInvite",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "in": "body",
            "name": "UserAccess",
            "description": "submit user deactivation request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "bad input parameter"
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Server Issue"
          }
        }
      }
    },
    "/PlacementLocListFilter": {
      "get": {
        "tags": [
          "Brewer Management"
        ],
        "summary": "PlacementLocListFilter",
        "description": "By passing in the appropriate options, you can search for\navailable result in the system\n",
        "operationId": "PlacementLocListFilter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PlacementLocationName",
            "in": "query",
            "description": "pass an optional PlacementLocationName string",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationList"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/AlertConsumptionCounts": {
      "get": {
        "tags": [
          "Brewer Management",
          "Consumption and Alerts",
          "getAlertandConsumptionCounts"
        ],
        "summary": "AlertConsumptionCounts",
        "description": "By passing in the appropriate options, you can search for\navailable result in the system\n",
        "operationId": "AlertConsumptionCounts",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "name": "SerialNumber",
            "in": "query",
            "description": "pass an optional SerialNumber string",
            "required": false,
            "type": "string"
          },
          {
            "name": "AzureIOTDeviceID",
            "in": "query",
            "description": "pass an optional Azure IOT Device ID string",
            "required": false,
            "type": "string"
          },
          {
            "name": "OracleIOTDeviceID",
            "in": "query",
            "description": "pass an optional Oracle IOT Device ID string",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "object",
              "properties": {
                "KADAccountId": {
                  "type": "string",
                  "example": "p0000000001"
                },
                "SerialNumber": {
                  "type": "string",
                  "example": "K4500.000.1234"
                },
                "counts": {
                  "type": "object",
                  "properties": {
                    "alertcount": {
                      "type": "integer",
                      "example": 5
                    },
                    "consumptioncount": {
                      "type": "integer",
                      "example": 1054
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "404": {
            "description": "Account Record not found"
          }
        }
      }
    },
    "/BrewerDetail/": {
      "get": {
        "tags": [
          "Brewer Management",
          "getBrewerDetail"
        ],
        "summary": "get Brewer Details",
        "description": "By passing in the appropriate options, you can search for\navailable result in the system\n",
        "operationId": "BrewerDetail",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "pass the asset Id string",
            "required": true,
            "type": "string"
          },
          {
            "name": "serialNumber",
            "in": "query",
            "description": "pass the SerialNumber string",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrewerDetail"
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "404": {
            "description": "Asset Record Not Found"
          }
        }
      }
    },
    "/BrewerList": {
      "get": {
        "tags": [
          "Brewer Management",
          "getBrewerList"
        ],
        "summary": "BrewerList",
        "description": "BrewerList",
        "operationId": "BrewerList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
          "name": "KADAccountId",
            "in": "query",
            "description": "pass an  KADAccountId string",
            "required": false,
            "type": "string"
          },
          {
            "name": "BusinessAccountId",
            "in": "query",
            "description": "pass an optional BusinessAccountId string",
            "required": false,
            "type": "string"
          },
          {
            "name": "PlacementLocation",
            "in": "query",
            "description": "pass an  PlacementLocation string",
            "required": false,
            "type": "string"
          },
          {
            "name": "DeviceType",
            "in": "query",
            "description": "pass an optional DeviceType string",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status",
            "in": "query",
            "description": "pass an  Status string",
            "required": false,
            "type": "string"
          },
          {
            "name": "RegistrationDate",
            "in": "query",
            "description": "pass an optional RegistrationDate string",
            "required": false,
            "type": "string"
          },
          {
            "name": "RegistrationApproval",
            "in": "query",
            "description": "pass an  RegistrationApproval string",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get brewer list",
            "schema": {
              "$ref": "#/definitions/BrewerDetailLOV"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/BusinessAccountContacts/": {
      "get": {
        "tags": [
          "Install",
          "getBusinessAccountContacts"
        ],
        "summary": "get list of contacts for  Business Account",
        "description": "get list of contacts for  Business Account",
        "operationId": "BusinessAccountContacts",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "pass a BusinessAccountId string for looking up user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/requesterID"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get contact list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactLOV"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/BrewerDetailInstall/": {
      "get": {
        "tags": [
          "Install",
          "Brewer Management",
          "getBrewerDetailInstall"
        ],
        "summary": "get Brewer Info during Install",
        "description": "This API is to be used during Installation for looking up Serial Number",
        "operationId": "BrewerDetailInstall",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serialNum",
            "in": "query",
            "description": "pass a SerialNumber string for looking up user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get brewer installation details list",
            "schema": {
              "$ref": "#/definitions/BrewerDetail"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Asset Record Not Found"
          }
        }
      }
    },
    "/createOfficeAccount": {
      "post": {
        "tags": [
          "Account Management",
          "Install"
        ],
        "summary": "createOfficeAccount",
        "description": "createOfficeAccount",
        "operationId": "createOfficeAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AccountList",
            "description": "create office account",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for create office account",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountList"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/BrewerLocationList": {
      "get": {
        "tags": [
          "Install"
        ],
        "summary": "BrewerLocationList",
        "description": "BrewerLocationList",
        "operationId": "BrewerLocationList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BrewerDetailsList",
            "description": "get Brewer location details list filter parameters",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BrewerDetailsList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for get brewer location list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrewerDetailsList"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/updateBrewer": {
      "patch": {
        "tags": [
          "Brewer Management"
        ],
        "summary": "updateBrewer",
        "description": "updateBrewer",
        "operationId": "updateBrewer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BrewerDetailsList",
            "description": "update Brewer details parameters",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BrewerDetailsList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for update brewer",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrewerResponseDetailsList"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/InstallRequest": {
      "post": {
        "tags": [
          "Install",
          "submitInstallationRequest"
        ],
        "summary": "Submit an Installation Request",
        "description": "This API is to submit an installation Request on confirmation page",
        "operationId": "InstallationRequest",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "in": "body",
            "name": "InstallRequest",
            "description": "submit Brewer installation request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Installation Request Submitted Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuccessFailResponse"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },    
    "/uninstallBrewer": {
      "post": {
        "tags": [
          "Install"
        ],
        "summary": "uninstallBrewer",
        "description": "uninstallBrewer",
        "operationId": "uninstallBrewer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BrewerDetailsList",
            "description": "uninstall Brewer parameters",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BrewerDetailsList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for uninstall Brewerlist",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrewerResponseDetailsList"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/MasterBrandLOVs": {
      "get": {
        "tags": [
          "Consumption and Alerts"
        ],
        "summary": "MasterBrandLOVs",
        "description": "MasterBrandLOVs",
        "operationId": "MasterBrandLOVs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "MasterBrandName",
            "in": "query",
            "description": "pass an optional MasterBrandName string for looking up brand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get brand list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Brands"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/BrandLOVs": {
      "get": {
        "tags": [
          "Consumption and Alerts"
        ],
        "summary": "BrandLOVs",
        "description": "BrandLOVs",
        "operationId": "BrandLOVs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "MasterBrandName",
            "in": "query",
            "description": "pass an optional MasterBrandName string for looking up brand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get brand list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Brands"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/VarietyFilter": {
      "get": {
        "tags": [
          "Consumption and Alerts"
        ],
        "summary": "VarietyFilter",
        "description": "VarietyFilter",
        "operationId": "VarietyFilter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variety",
            "in": "query",
            "description": "pass an optional variety string for looking up user",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get variety list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variety"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/AlertList": {
      "get": {
        "tags": [
          "Consumption and Alerts"
        ],
        "summary": "AlertList Detail output (grid)",
        "description": "AlertList",
        "operationId": "AlertList",
         "security": [
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "name": "CustomerAccountID",
            "in": "query",
            "description": "pass a Customer Accountid for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "name": "SerialNumber",
            "in": "query",
            "description": "pass a Alert History id for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "name": "AlertHistory",
            "in": "query",
            "description": "pass a Criticality string for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "name": "Criticality",
            "in": "query",
            "description": "pass a Criticality string for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "name": "AlertCategory",
            "in": "query",
            "description": "pass a Alert Category string for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "name": "Resolution",
            "in": "query",
            "description": "pass a Resolutin string for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "name": "AlertName",
            "in": "query",
            "description": "pass a AlertName string for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "description": "pass a FromDate Date/Time for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "description": "pass a ToDate Date/Time for looking up Alerts",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/requesterID"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get alert List",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/AlertResolution": {
      "get": {
        "tags": [
          "Consumption and Alerts"
        ],
        "summary": "AlertResolution Lookup",
        "description": "AlertResolution",
        "operationId": "AlertResolution",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AlertName",
            "in": "query",
            "description": "pass an optional AlertName string for lookup in knowledger base",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get alert knowledge lookup",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Alerts"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/exportAlerts": {
      "post": {
        "tags": [
          "Consumption and Alerts"
        ],
        "summary": "exportAlerts",
        "description": "exportAlerts",
        "operationId": "exportAlerts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Alerts",
            "description": "Export Alerts",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Alerts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for export of alerts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Alerts"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/MediaPLDetail": {
      "get": {
        "tags": [
          "Media Management"
        ],
        "summary": "Media Item Detail",
        "description": "Media Item Detail",
        "operationId": "MediaItemDetail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "MediaId",
            "in": "query",
            "description": "pass an MediaId string for looking up Media",
            "required": false,
            "type": "string"
          },
          {
            "name": "KADAccountId",
            "in": "query",
            "description": "pass an KADAccountId string for looking up Media",
            "required": false,
            "type": "string"
          },
          {
            "name": "BusinessAccountId",
            "in": "query",
            "description": "pass an BusinessAccountId string for looking up Media",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get Media Details",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Medialist"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/MediaPlayList/{PlaylistId}": {
      "get": {
        "tags": [
          "Media Management"
        ],
        "summary": "Media Play List",
        "description": "Media Play List",
        "operationId": "MediaPList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PlaylistId",
            "in": "path",
            "description": "pass an  Playlist string for looking up a playlist",
            "required": true,
            "type": "string"
          },
          {
            "name": "KADAccountId",
            "in": "query",
            "description": "pass an  KADAccountId string for looking up Media",
            "required": false,
            "type": "string"
          },
          {
            "name": "BusinessAccountId",
            "in": "query",
            "description": "pass an  BusinessAccountId string for looking up Media",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get Media list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MediaPlayListObject"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "post": {
        "tags": [
          "Media Management"
        ],
        "summary": "createMediaPlayList  -- put the post into the 'Media Playlist' portion  get + post",
        "description": "createMediaPlayList",
        "operationId": "createMediaPlayList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createMediaPlayListRequest",
            "description": "create Media playlist",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MediaPlayListObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for creation of media playlist",
            "schema": {
              "$ref": "#/definitions/MediaPlayListObject"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "patch": {
        "tags": [
          "Media Management"
        ],
        "summary": "updateMediaPlaylist",
        "description": "updateMediaPlayList",
        "operationId": "updateMediaPlayList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateMediaPlayListRequest",
            "description": "update Media playlist",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MediaPlayListObject"
            }
          },
          {
            "name": "PlaylistId",
            "in": "path",
            "description": "pass an  Playlist string for looking up a playlist",
            "required": true,
            "type": "string"
          },
        ],
        "responses": {
          "200": {
            "description": "results for update of media playlist",
            "schema": {
              "$ref": "#/definitions/MediaPlayListObject"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "delete": {
        "tags": [
          "Media Management"
        ],
        "summary": "deleteMediaPlaylist",
        "description": "deleteMediaPlayList",
        "operationId": "deleteMediaPlayList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "PlaylistId",
            "in": "path",
            "description": "pass an  Playlist string for looking up a playlist",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
             "description": "Playlist Removed"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/publishMedia": {
      "post": {
        "tags": [
          "Media Management"
        ],
        "summary": "publishMedia",
        "description": "publishMedia",
        "operationId": "publishMedia",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PublishUnpublishMediaRequest",
            "description": "Publish Media",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PublishUnpublishMediaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for publish of media",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublishUnpublishMediaResponse"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/unpublishMedia": {
      "post": {
        "tags": [
          "Media Management"
        ],
        "summary": "unpublishMedia",
        "description": "unpublishMedia",
        "operationId": "unpublishMedia",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PublishUnpublishMediaRequest",
            "description": "unpublish Media",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PublishUnpublishMediaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for unpublish of media",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublishUnpublishMediaResponse"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/AlertCountsByCriticality": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "AlertCountsByCriticality",
        "description": "AlertCountsByCriticality",
        "operationId": "AlertCountsByCriticality",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AlertName",
            "in": "query",
            "description": "pass an optional AlertName string for getting count by Criticality",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for getting count by criticality",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Alerts"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/brewerStatistics": {
      "get": {
        "tags": [
          "Dashboard",
          "getBrewerStatistics"
        ],
        "summary": "brewerStatistics",
        "description": "brewerStatistics",
        "operationId": "brewerStatistics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          }
        ],
        "responses": {
          "200": {
            "description": "results for getting brewer details statistic",
            "schema": {
                "$ref": "#/definitions/BrewerStats"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/AccountsByConsumption": {
      "get": {
        "tags": [
          "Dashboard",
          "AccountsByConsumption"
        ],
        "summary": "AccountsByConsumption",
        "description": "getAccountsByConsumption",
        "operationId": "AccountsByConsumption",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "name": "SortOrder",
            "in": "query",
            "description": "Insert the Order order to sort by: ASC or DESC",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get account by consumption",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountsByConsumptionObject"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/avgBrewersConsumption": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "avgBrewersConsumption",
        "description": "getavgBrewersConsumption",
        "operationId": "avgBrewersConsumption",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BrewerDetailsList",
            "description": "get Avg Brewers Consumption",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BrewerDetailsList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results get Avg Brewers Consumption",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrewerDetailsList"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/ConsumptionList/{userId}": {
      "get": {
        "tags": [
          "Consumption and Alerts"
        ],
        "summary": "getConsumptionList",
        "description": "getConsumptionList",
        "operationId": "ConsumptionList",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "name": "PartnerNum",
            "in": "query",
            "description": "pass an optional PartnerNum string for filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "AccountNum",
            "in": "query",
            "description": "pass one or more optional AccountNum string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "SerialNum",
            "in": "query",
            "description": "pass one or more optional SerialNum string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "lidType",
            "in": "query",
            "description": "pass one or more optional lidType string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand",
            "in": "query",
            "description": "pass one or more optional brand string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "variety",
            "in": "query",
            "description": "pass one or more optional variety string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "roastType",
            "in": "query",
            "description": "pass one or more optional roastType string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "podType",
            "in": "query",
            "description": "pass one or more optional podType string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "brewResult",
            "in": "query",
            "description": "pass one or more optional brewResult string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          },
          {
            "name": "brewDate",
            "in": "query",
            "description": "pass one or more optional brewDate string for filter. multiple values should be comma separated",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for get Consumption List",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Consumption"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "user Id not found"
          }
        }
      }
    },
    "/NotificationsCount": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "getNotificationsCount",
        "description": "getNotificationsCount",
        "operationId": "NotificationsCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AlertName",
            "in": "query",
            "description": "pass an optional AlertName string for getting Notification count",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for getting notification count",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Alerts"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/BusinessAccountLOVs/": {
      "get": {
        "tags": [
          "Account Management",
          "Brewer Management",
          "Install",
          "getBusinessAccountLoVByKADAccount"
        ],
        "summary": "get List of Business Accounts by KAD for LOV",
        "description": "get List of Business Accounts by KAD for LOV",
        "operationId": "BusinessAccountLoVByKADAccount",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "name": "KADAccountId",
            "in": "query",
            "description": "pass an req account id to filter list of business accounts",
            "required": true,
            "type": "string"
          },
          {
            "name": "KADAccountName",
            "in": "query",
            "description": "pass an optional account name string to filter list of business accounts",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for getting Business Account list based on KAD account",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountLOV"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "KAD Account does not exist"
          }
        }
      }
    },
    "/KADAccountLoVByUser": {
      "get": {
        "tags": [
          "Account Management",
          "getKADAccountLoVByUser"
        ],
        "summary": "getKADAccountLoVByUser",
        "description": "getKADAccountLoVByUser",
        "operationId": "KADAccountLoVByUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "pass an optional user string for getting KAD account list based on user name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "results for getting KAD account list based on user name",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountLOV"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "406": {
            "description": "No Account Found"
          },
          "409": {
            "description": "Duplicate Record exists"
          }
        }
      }
    },
    "/registerBrewer": {
      "post": {
        "tags": [
          "Install",
          "registerBrewer"
        ],
        "summary": "Trigger Brewer RegistrationProcess",
        "description": "Trigger Brewer RegistrationProcess",
        "operationId": "registerBrewer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_partnerID"
          },
          {
            "$ref": "#/parameters/requesterID"
          },
          {
            "in": "body",
            "name": "BrewerRegRequest",
            "description": "register Brewer request parameters",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RegisterBrewerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results for register brewer request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuccessFailResponse"
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    }
  },
  "definitions": {
    "BrewerDetailsList": {
      "type": "object",
      "required": [
        "AssetId",
        "BrewCount",
        "BrewerPartnerId",
        "ContactId",
        "DeviceType",
        "dataRecipeVer",
        "appUIVersion",
        "Model",
        "NetworkConnection",
        "PlacementLocation",
        "RegistrationApprovalStatus",
        "RegistrationDate",
        "SerialNumber",
        "Status",
        "WarrantyEndDate",
        "AppUIVer",
        "DataRecipeVer",
        "deviceId"
      ],
      "properties": {
        "SerialNumber": {
          "type": "string",
          "format": "uuid",
          "example": "SerialNumber"
        },
        "DeviceType": {
          "type": "string",
          "format": "uuid",
          "example": "DeviceType"
        },
        "PlacementLocation": {
          "type": "string",
          "format": "uuid",
          "example": "PlacementLocation"
        },
        "Status": {
          "type": "string",
          "format": "uuid",
          "example": "Status"
        },
        "KABBusinessAccount": {
          "type": "string",
          "format": "uuid",
          "example": "KABBusinessAccount"
        },
        "RegistrationApprovalStatus": {
          "type": "string",
          "format": "uuid",
          "example": "RegistrationApprovalStatus"
        },
        "RegistrationDate": {
          "type": "string",
          "format": "uuid",
          "example": "RegistrationDate"
        },
        "deviceId": {
          "type": "string",
          "format": "uuid",
          "example": "deviceId"
        },
        "AssetId": {
          "type": "string",
          "format": "uuid",
          "example": "AssetId"
        },
        "WarrantyEndDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "Model": {
          "type": "string",
          "format": "uuid",
          "example": "Model"
        },
        "Firmware": {
          "type": "string",
          "format": "uuid",
          "example": "Firmware"
        },
        "BrewCount": {
          "type": "string",
          "format": "uuid",
          "example": "Model"
        },
        "NetworkConnection": {
          "type": "string",
          "format": "uuid",
          "example": "NetworkConnection"
        },
        "BrewerPartnerId": {
          "type": "string",
          "format": "uuid",
          "example": "BrewerPartnerId"
        },
        "UserID": {
          "type": "string",
          "format": "uuid",
          "example": "UserID"
        },
        "KADAccountId": {
          "type": "string",
          "format": "uuid",
          "example": "KADAccountId"
        },
        "AppUIVer": {
          "type": "string",
          "format": "uuid",
          "example": "AppUIVer"
        },
        "DataRecipeVer": {
          "type": "string",
          "format": "uuid",
          "example": "DataRecipeVer"
        },
        "ContactId": {
          "type": "string",
          "format": "uuid",
          "example": "ContactId"
        }
      }
    },
    "BrewerStats": {
      "type": "object",
      "required": [
        "totalCount",
        "onlineCount",
        "offlineCount",
        "unknownCount"
      ],
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "uuid",
          "example": "SerialNumber"
        },
        "onlineCount": {
          "type": "string",
          "format": "uuid",
          "example": "DeviceType"
        },
        "offlineCount": {
          "type": "string",
          "format": "uuid",
          "example": "PlacementLocation"
        },
        "unknownCount": {
          "type": "string",
          "format": "uuid",
          "example": "Status"
        }
      }
    },
    "RegisterBrewerRequest": {
      "type": "object",
      "required": [
        "serialNumber"
      ],
      "properties": {
        "assetId": {
          "type": "string",
          "format": "uuid",
          "example": "IB Asset - ast-000000000abc"
        },
        "serialNumber": {
          "type": "string",
          "format": "uuid",
          "example": "4500.000.00001"
        },
        "AZUREdeviceId": {
          "type": "string",
          "format": "uuid",
          "example": "d-0000001"
      },
        "OracledeviceId": {
          "type": "string",
          "format": "uuid",
          "example": "d-0000001"
      }
     }
    },
    "BrewerDetailLOV": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "BrewerDetails": {
          "type": "array",
           "items": {
            "$ref": "#/definitions/BrewerDetail"
           }
        }
       }
      },
    "BrewerDetail": {
      "type": "object",
      "required": [
        "assetId",
        "brewCount",
        "brewerPartnerId",
        "brewerContactId",
        "deviceType",
        "dataRecipeVer",
        "appUIVersion",
        "model",
        "networkConnection",
        "placementLocation",
        "registrationStatus",
        "registrationDate",
        "serialNumber",
        "status",
        "warrantyEndDate",
        "deviceId"
      ],
      "properties": {
        "serialNumber": {
          "type": "string",
          "format": "uuid",
          "example": "450.000.0000"
        },
        "deviceType": {
          "type": "string",
          "format": "uuid",
          "example": "pod2cup"
        },
        "placementLocation": {
          "type": "string",
          "format": "uuid",
          "example": "1st floor Cafetaria"
        },
        "status": {
          "type": "string",
          "format": "uuid",
          "example": "Registered"
        },
        "registrationStatus": {
          "type": "string",
          "format": "uuid",
          "example": "Approved"
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "UTC Datetime when registration request was approved",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "assetId": {
          "type": "string",
          "format": "uuid",
          "example": "IB ID - PARTY"
        },
        "deviceId_oracle": {
          "type": "string",
          "format": "uuid",
          "example": "Oracle IOT ID"
        },
         "deviceId_azure": {
          "type": "string",
          "format": "uuid",
          "example": "AZURE IOT ID"
        },
        "warrantyEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "Warranty End Date in OEC",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "model": {
          "type": "string",
          "format": "uuid",
          "example": "K4500"
        },
        "dataRecipeVer": {
          "type": "string",
          "format": "uuid",
          "example": "1.1.1"
        },
        "appUIVersion": {
          "type": "string",
          "format": "uuid",
          "example": "0.0.1"
        },
        "brewCount": {
          "type": "integer",
          "format": "uuid",
          "example": 0
        },
        "networkConnection": {
          "type": "string",
          "format": "uuid",
          "example": "Online"
        },
        "brewerPartnerId": {
          "type": "string",
          "format": "uuid",
          "example": "d00000000123"
        },
        "brewercontactId": {
          "type": "string",
          "format": "uuid",
          "example": "c00000000123"
        }
      }
    },
    "BrewerResponseDetailsList": {
      "type": "object",
      "required": [
        "AssetId",
        "BrewCount",
        "BrewerPartnerId",
        "ContactId",
        "DeviceType",
        "ErrorDescription",
        "ErrroCode",
        "Firmware",
        "Model",
        "NetworkConnection",
        "PlacementLocation",
        "RegistrationApprovalStatus",
        "RegistrationDate",
        "SerialNumber",
        "Status",
        "WarrantyEndDate",
        "deviceId"
      ],
      "properties": {
        "Status": {
          "type": "string",
          "format": "uuid",
          "example": "Status"
        },
        "ErrroCode": {
          "type": "string",
          "format": "uuid",
          "example": "ErrroCode"
        },
        "ErrorDescription": {
          "type": "string",
          "format": "uuid",
          "example": "ErrorDescription"
        },
        "SerialNumber": {
          "type": "string",
          "format": "uuid",
          "example": "SerialNumber"
        },
        "DeviceType": {
          "type": "string",
          "format": "uuid",
          "example": "DeviceType"
        },
        "PlacementLocation": {
          "type": "string",
          "format": "uuid",
          "example": "PlacementLocation"
        },
        "KABBusinessAccount": {
          "type": "string",
          "format": "uuid",
          "example": "KABBusinessAccount"
        },
        "RegistrationApprovalStatus": {
          "type": "string",
          "format": "uuid",
          "example": "RegistrationApprovalStatus"
        },
        "RegistrationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "deviceId": {
          "type": "string",
          "format": "uuid",
          "example": "deviceId"
        },
        "AssetId": {
          "type": "string",
          "format": "uuid",
          "example": "AssetId"
        },
        "WarrantyEndDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "Model": {
          "type": "string",
          "format": "uuid",
          "example": "Model"
        },
        "Firmware": {
          "type": "string",
          "format": "uuid",
          "example": "Firmware"
        },
        "BrewCount": {
          "type": "string",
          "format": "uuid",
          "example": "BrewCount"
        },
        "NetworkConnection": {
          "type": "string",
          "format": "uuid",
          "example": "NetworkConnection"
        },
        "BrewerPartnerId": {
          "type": "string",
          "format": "uuid",
          "example": "BrewerPartnerId"
        },
        "ContactId": {
          "type": "string",
          "format": "uuid",
          "example": "ContactId"
        }
      }
    },
    "UserList": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "Users": {
          "type": "object",
          "properties": {
            "FirstName": {
              "type": "string",
              "format": "uuid",
              "example": "FirstName"
            },
            "LastName": {
              "type": "string",
              "format": "uuid",
              "example": "LastName"
            },
            "UserId": {
              "type": "string",
              "format": "uuid",
              "example": "UserId"
            },
            "EmailAddress": {
              "type": "string",
              "format": "uuid",
              "example": "EmailAddress"
            },
            "Status": {
              "type": "string",
              "format": "SUCCESS",
              "example": "Status"
            },
            "PartnerNum": {
              "type": "string",
              "format": "uuid",
              "example": 83
            },
            "businessAccNum": {
              "type": "string",
              "format": "uuid",
              "example": "0-007796470"
            },
            "businessAccId": {
              "type": "string",
              "format": "uuid",
              "example": "0-007796470"
            },
            "businessAccName": {
              "type": "string",
              "format": "uuid",
              "example": "ABC Corp"
            },
            "role": {
              "type": "string",
              "format": "uuid",
              "example": "Technician"
            },
            "PartnerID": {
              "type": "string",
              "format": "uuid",
              "example": "PartnerID"
            },
            "PartnerName": {
              "type": "string",
              "format": "uuid",
              "example": "PartnerName"
            },
            "Address": {
              "type": "string",
              "format": "uuid",
              "example": "Address"
            },
            "CreatedDate": {
              "type": "string",
              "format": "date-time",
              "example": "2016-08-29T09:12:33.001Z"
            },
            "Role": {
              "type": "string",
              "format": "uuid",
              "example": "Role"
            },
            "PhoneNumber": {
              "type": "string",
              "format": "uuid",
              "example": "PhoneNumber"
            },
            "oktaId": {
              "type": "string",
              "format": "uuid",
              "example": "okta00000001"
            },
            "idcsId": {
              "type": "string",
              "format": "uuid",
              "example": "idcs0000001"
            }
          }
        }
      }
    },
    "UserKAD": {
      "type": "object",
      "required": [
        "partnerNumber",
        "partnerId",
        "PartnerName"
      ],
      "properties": {
        "partnerId": {
          "type": "string",
          "format": "uuid",
          "example": "30001111"
        },
        "partnerNum": {
          "type": "string",
          "format": "uuid",
          "example": "FSN123"
        },
        "partnerName": {
          "type": "string",
          "format": "uuid",
          "example": "Staples"
        },
        "businessAccount": {
          "type": "array",
              "items": {
                "$ref": "#/definitions/UserBusinessAcct"
          }
        }
      }
    },
    "UserBusinessAcct": {
      "type": "object",
      "required": [
        "businessAccNumber",
        "businessAccId",
        "businessAccName"
      ],
      "properties": {
        "businessAccId": {
          "type": "string",
          "format": "uuid",
          "example": "30001111"
        },
        "businessAccNumber": {
          "type": "string",
          "format": "uuid",
          "example": "FSN123"
        },
        "businessAccName": {
          "type": "string",
          "format": "uuid",
          "example": "Staples"
        }
      }
    },
    "UserDetails": {
      "type": "object",
      "required": [
      "FirstName",
      "LastName"
      ],
      "properties": {
            "FirstName": {
              "type": "string",
              "format": "uuid",
              "example": "FirstName"
            },
            "LastName": {
              "type": "string",
              "format": "uuid",
              "example": "LastName"
            },
            "UserId": {
              "type": "string",
              "format": "uuid",
              "example": "UserId"
            },
            "EmailAddress": {
              "type": "string",
              "format": "uuid",
              "example": "EmailAddress"
            },
            "Status": {
              "type": "string",
              "format": "SUCCESS",
              "example": "Status"
            },
            "PartnerNum": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserKAD"
          }
            },
            "role": {
              "type": "string",
              "format": "uuid",
              "example": "Technician"
            },
            "Address": {
              "type": "string",
              "format": "uuid",
              "example": "Address"
            },
            "CreatedDate": {
              "type": "string",
              "format": "date-time",
              "example": "2016-08-29T09:12:33.001Z"
            },
            "Role": {
              "type": "string",
              "format": "uuid",
              "example": "Role"
            },
            "PhoneNumber": {
              "type": "string",
              "format": "uuid",
              "example": "PhoneNumber"
            }
      }
    },
    "AccountList": {
      "type": "object",
      "required": [
        "KADAccountId",
        "KADAccountName",
       
      ],
      "properties": {
          "KADAccountName": {
          "type": "string",
          "format": "uuid",
          "example": "KADAccountName"
        },
         "KADAccountId": {
          "type": "string",
          "format": "uuid",
          "example": "KADAccountId"
        },
       "ListOfContact": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListOfContact"
          }
        }
      }
    },
    "AccountsByConsumptionObject": {
      "type": "object",
      "required": [
        "DateLastRefreshed",
        "SortOrder",
        "CustomerAccountNum",
        "CustomerAccountName",
        "TotalBrews",
        "AvgPerBrewer",
      ],
      "properties": {
          "DateLastRefreshed": {
          "type": "string",
          "format": "uuid",
          "example": "11/22/2022"
        },
         "SortOrder": {
          "type": "string",
          "format": "uuid",
          "example": "ASC"
        },
       "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountsByConsumptionList"
          }
        }
      }
    },
    "AccountsByConsumptionList": {
      "type": "object",
      "required": [
        "Rank",
        "CustomerAccountId",
        "CustomerAccountNum",
        "CustomerAccountName",
        "TotalBrews",
        "AvgPerBrewer",
      ],
      "properties": {
          "CustomerAccountId": {
          "type": "string",
          "format": "uuid",
          "example": "30000128"
        },
         "CustomerAccountNum": {
          "type": "string",
          "format": "uuid",
          "example": "FSN123"
        },
        "CustomerAccountName": {
          "type": "string",
          "format": "uuid",
          "example": "Staples123"
        },
        "TotalBrews": {
          "type": "string",
          "format": "uuid",
          "example": "795"
        },
        "AvgPerBrewer": {
          "type": "string",
          "format": "uuid",
          "example": "265"
        }
      }
    },
    "Brands": {
      "type": "object",
      "required": [
        "BrandName",
        "MasterBrandName"
      ],
      "properties": {
        "MasterBrandName": {
          "type": "string",
          "format": "uuid",
          "example": "MasterBrandName"
        },
        "BrandName": {
          "type": "string",
          "format": "uuid",
          "example": "BrandName"
        }
      }
    },
    "ListOfContact": {
      "type": "object",
      "required": [
        "UserId"
      ],
      "properties": {
        "UserId": {
          "type": "string",
          "format": "uuid",
          "example": "UserId"
        }
      }
    },
    "AlertList": {
      "type": "object",
      "required": [
        "Count",
      ],
      "properties": {
        "Count": {
          "type": "string",
          "format": "uuid",
          "example": "3"
        },
       "ListOfAlerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alerts"
          }
        }
      }
    },
    "Alerts": {
      "type": "object",
      "required": [
        "AlertNumber",
        "AlertName",
        "AlertType",
        "BusinessAccount",
        "Resolution",
        "CreatedDate",
        "ResolutionDate",
        "Description",
        "KADAccount",
        "SerialNumber",
        "Brand_Variety",
        "PlacementLocation",
        "AlertCategory",
        "Criticality"
      ],
      "properties": {
        "KADAccountID": {
          "type": "string",
          "format": "uuid",
          "example": "30001111"
        },
        "KADAccountNum": {
          "type": "string",
          "format": "uuid",
          "example": "FSN123"
        },
        "KADAccountName": {
          "type": "string",
          "format": "uuid",
          "example": "Staples"
        },
        "BusinessAccountID": {
          "type": "string",
          "format": "uuid",
          "example": "3000123"
        },
        "BusinessAccountNum": {
          "type": "string",
          "format": "uuid",
          "example": "FSN144"
        },
        "BusinessAccountName": {
          "type": "string",
          "format": "uuid",
          "example": "Severity"
        },
        "AlertNumber": {
          "type": "string",
          "format": "uuid",
          "example": "k4500.123.01"
        },
        "Description": {
          "type": "string",
          "format": "uuid",
          "example": ".01 maeans ...."
        },
        "Criticality": {
          "type": "string",
          "format": "uuid",
          "example": "BusinessAccount"
        },
        "Resolution": {
          "type": "string",
          "format": "uuid",
          "example": "restart the brewer"
        },
        "BrandVariety": {
          "type": "string",
          "format": "uuid",
          "example": ""
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-01-01 01:01.001"
        },
        "PlacementLocation": {
          "type": "string",
          "format": "uuid",
          "example": "3rd Floor"
        },
        "SerialNumber": {
          "type": "string",
          "format": "uuid",
          "example": "K4500.12.00.1.001"
        },
        "AlertCategory": {
          "type": "string",
          "format": "uuid",
          "example": "Cloud"
        },
        "AlertName": {
          "type": "string",
          "format": "uuid",
          "example": "Lack of Connection"
        },
        "ResolutionDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-01-01 01:01.001"
        }
      }
    },
    "Consumption": {
      "type": "object",
      "required": [
        "placementLoc",
        "kADAccountId",
        "kADAccountName",
        "businessAccountId",
        "businessAccountName",
        "masterBrand",
        "brand",
        "lidType",
        "brewDate",
        "variety",
        "serialNum",
        "deviceId",
        "userID",
        "rebateEligible",
        "ownership",
        "brewResult",
        "beverageType",
        "brewSize",
        "podType"
      ],
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "ConsumptionList": {
          "type": "object",
          "properties": {
            "kADAccountId": {
              "type": "string",
              "format": "uuid",
              "example": "KADAccountId"
            },
            "businessAccountId": {
              "type": "string",
              "format": "uuid",
              "example": "BusinessAccountId"
            },
            "masterBrand": {
              "type": "string",
              "format": "uuid",
              "example": "MasterBrand"
            },
            "brand": {
              "type": "string",
              "format": "uuid",
              "example": "Brand"
            },
            "lidType": {
              "type": "string",
              "format": "uuid",
              "example": "LidType"
            },
            "brewDate": {
              "type": "string",
              "format": "date-time",
              "example": "2016-08-29T09:12:33.001Z"
            },
            "variety": {
              "type": "string",
              "format": "uuid",
              "example": "Variety"
            },
            "serialNum": {
              "type": "string",
              "format": "uuid",
              "example": "SerialNum"
            },
            "kADAccountName": {
              "type": "string",
              "format": "uuid",
              "example": "KADAccountName"
            },
            "businessAccountName": {
              "type": "string",
              "format": "uuid",
              "example": "BusinessAccountName"
            },
            "userID": {
              "type": "string",
              "format": "uuid",
              "example": "UserID"
            },
            "placementLoc": {
              "type": "string",
              "format": "uuid",
              "example": "1st Floor Cafetaria"
            },
            "rebateEligible": {
              "type": "string",
              "format": "uuid",
              "example": "Yes"
            },
            "ownership": {
              "type": "string",
              "format": "uuid",
              "example": "KDP Owned"
            },
            "deviceId": {
              "type": "string",
              "format": "uuid",
              "example": "000000123abc"
            },
            "brewResult": {
              "type": "string",
              "format": "uuid",
              "example": "Success"
            },
            "beverageType": {
              "type": "string",
              "format": "uuid",
              "example": "Cafemocha"
            },
            "brewSize": {
              "type": "string",
              "format": "uuid",
              "example": "6 oz"
            },
            "podType": {
              "type": "string",
              "format": "uuid",
              "example": "k-cup"
            }
          }
        }
      }
    },
    "Variety": {
      "type": "object",
      "required": [
        "VarietyName"
      ],
      "properties": {
        "VarietyName": {
          "type": "string",
          "format": "uuid",
          "example": "VarietyName"
        }
      }
    },
    "LocationList": {
      "type": "object",
      "required": [
        "PlacementLocationName"
      ],
      "properties": {
        "PlacementLocationName": {
          "type": "string",
          "format": "uuid",
          "example": "PlacementLocationName"
        }
      }
    },
    "PublishUnpublishMediaRequest": {
      "type": "object",
      "required": [
        "SerialNumberList",
        "MediaId"
      ],
      "properties": {
        "MediaId": {
          "type": "string",
          "format": "uuid",
          "example": "MediaId"
        },
        "SerialNumberList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SerialNumber"
          }
        }
      }
    },
    "SerialNumber": {
      "type": "object",
      "required": [
        "SerialNumber"
      ],
      "properties": {
        "SerialNumber": {
          "type": "string",
          "format": "uuid",
          "example": "SerialNumber"
        }
      }
    },
    "PublishUnpublishMediaResponse": {
      "type": "object",
      "required": [
        "Status",
        "ErrorMessage"
      ],
      "properties": {
        "Status": {
          "type": "string",
          "format": "uuid",
          "example": "Success"
        },
        "ErrorMessage": {
          "type": "string",
          "format": "uuid",
          "example": "NA"
        }
      }
    },
    "MediaPLList": {
      "type": "object",
      "required": [
        "BusinessAccountId",
        "KADAccountId",
        "MediaId",
        "Image",
        "Title",
        "Type",
        "Status",
        "NumberOfBrewer",
        "LastModified"
      ],
      "properties": {
        "Image": {
          "type": "string",
          "format": "uuid",
          "example": "Image"
        },
        "Title": {
          "type": "string",
          "format": "uuid",
          "example": "Title"
        },
        "Type": {
          "type": "string",
          "format": "uuid",
          "example": "Type"
        },
        "Status": {
          "type": "string",
          "format": "uuid",
          "example": "Status"
        },
        "NumberofBrewer": {
          "type": "string",
          "format": "uuid",
          "example": "NumberofBrewer"
        },
        "LastModified": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "MediaId": {
          "type": "string",
          "format": "uuid",
          "example": "MediaId"
        },
        "KADAccountId": {
          "type": "string",
          "format": "uuid",
          "example": "KADAccountId"
        },
        "BusinessAccountId": {
          "type": "string",
          "format": "uuid",
          "example": "BusinessAccountId"
        }
      }
    },
    "MediaPlayListObject": {
      "type": "object",
      "required": [
        "PlayListName",
        "PlayListNumber",
        "Description",
        "Type",
        "KADAccount",
        "BusinessAccount",
        "DefaultBrewerId",
        "LastModified",
        "LastModifiedAMPUserId",
        "MediaList"
      ],
      "properties": {
        "PlayListName": {
          "type": "string",
          "format": "uuid",
          "example": "PlayListName"
        },
        "PlayListNumber": {
          "type": "string",
          "format": "uuid",
          "example": "PlayListNumber"
        },
        "Description": {
          "type": "string",
          "format": "uuid",
          "example": "Description"
        },
        "Type": {
          "type": "string",
          "format": "uuid",
          "example": "Type"
        },
        "KADAccount": {
          "type": "string",
          "format": "uuid",
          "example": "KADAccount"
        },
        "BusinessAccount": {
          "type": "string",
          "format": "uuid",
          "example": "BusinessAccount"
        },
        "DefaultBrewerId": {
          "type": "string",
          "format": "uuid",
          "example": "DefaultBrewerId"
        },
        "LastModified": {
          "type": "string",
          "format": "date-time",
          "example": "LastModified"
        },
        "LastModifiedAMPUserId": {
          "type": "string",
          "format": "uuid",
          "example": "LastModifiedAMPUserId"
        },
        "Medialist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Medialist"
          }
        }
      }
    },
    "Medialist": {
      "type": "object",
      "required": [
        "ImageName",
        "ImageURL",
        "Order",
        "TransitionTime",
        "MediaNumber",
        "LastModifiedAMPUserId",
        "Type"
      ],
      "properties": {
        "mediaName": {
          "type": "string",
          "format": "uuid",
          "example": "ImageName"
        },
        "mediaURL": {
          "type": "string",
          "format": "uuid",
          "example": "ImageURL"
        },
        "order": {
          "type": "string",
          "format": "uuid",
          "example": "Order"
        },
        "transitionTime": {
          "type": "string",
          "format": "uuid",
          "example": "TransitionTime"
        },
        "mediaNumber": {
          "type": "string",
          "format": "date-time",
          "example": "MediaNumber"
        },
        "lastModifiedAMPUserId": {
          "type": "string",
          "format": "uuid",
          "example": "LastModifiedAMPUserId"
        },
        "status": {
          "type": "string",
          "format": "uuid",
          "example": "LastModifiedAMPUserId"
        },
        "type": {
          "type": "string",
          "format": "Type",
          "example": "Type"
        }
      }
    },
    "MediaDetailsList": {
      "type": "object",
      "required": [
        "Image",
        "Title",
        "Type",
        "URL",
        "Status",
        "NumberOfBrewer",
        "LastModified"
      ],
      "properties": {
        "Image": {
          "type": "string",
          "format": "uuid",
          "example": "ImageName"
        },
        "Title": {
          "type": "string",
          "format": "uuid",
          "example": "Title"
        },
        "Type": {
          "type": "string",
          "format": "uuid",
          "example": "Type"
        },
        "URL": {
          "type": "string",
          "format": "uuid",
          "example": "https://google.com/image.png"
        },
        "Status": {
          "type": "string",
          "format": "uuid",
          "example": "Status"
        },
        "NumberOfBrewer": {
          "type": "string",
          "format": "uuid",
          "example": "NumberOfBrewer"
        },
        "LastModified": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-29T09:12:33.001Z"
        }
      }
    },
    "MediaDetails": {
      "type": "object",
      "required": [
        "ImageName",
        "Title",
        "Description",
        "URL"
      ],
      "properties": {
        "ImageName": {
          "type": "string",
          "format": "uuid",
          "example": "ImageName"
        },
        "Title": {
          "type": "string",
          "format": "uuid",
          "example": "Title"
        },
        "Description": {
          "type": "string",
          "format": "uuid",
          "example": "Description"
        },
        "URL": {
          "type": "string",
          "format": "uuid",
          "example": "URL"
        }
      }
    },
    "createMediaPlayListResponse": {
      "type": "object",
      "required": [
        "Status",
        "ErrorMessage"
      ],
      "properties": {
        "Status": {
          "type": "string",
          "format": "uuid",
          "example": "Success"
        },
        "ErrorMessage": {
          "type": "string",
          "format": "uuid",
          "example": "NA"
        }
      }
    },
    "BrewerDetailsListResponse": {
      "type": "object",
      "required": [
        "SerialNumber",
        "DeviceType",
        "PlacementLocation",
        "Status",
        "KADAccount",
        "BusinessAccount",
        "RegistrationApprovalStatus",
        "RegistrationDate",
        "Model"
      ],
      "properties": {
        "SerialNumber": {
          "type": "string",
          "format": "uuid",
          "example": "SerialNumber"
        },
        "DeviceType": {
          "type": "string",
          "format": "uuid",
          "example": "DeviceType"
        },
        "PlacementLocation": {
          "type": "string",
          "format": "uuid",
          "example": "PlacementLocation"
        },
        "Status": {
          "type": "string",
          "format": "uuid",
          "example": "Status"
        },
        "KADAccount": {
          "type": "string",
          "format": "uuid",
          "example": "KADBusinessAccount"
        },
        "BusinessAccount": {
          "type": "string",
          "format": "uuid",
          "example": "KADBusinessAccount"
        },
        "RegistrationApprovalStatus": {
          "type": "string",
          "format": "uuid",
          "example": "RegistrationApprovalStatus"
        },
        "RegistrationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "Model": {
          "type": "string",
          "format": "uuid",
          "example": "Model"
        }
      }
    },
    "RegisterBrewerResponse": {
      "type": "object",
      "required": [
        "status",
        "errorMessage",
        "requestId"
      ],
      "properties": {
        "status": {
          "type": "string",
          "format": "uuid",
          "example": "Success"
        },
        "errorMessage": {
          "type": "string",
          "format": "uuid",
          "example": "NA"
        },
        "requestId": {
          "type": "string",
          "format": "uuid",
          "example": "SR00001"
        }
      }
    },
    "SuccessFailResponse": {
      "type": "object",
      "required": [
        "status",
        "errorMessage",
        "requestId"
      ],
      "properties": {
        "status": {
          "type": "string",
          "format": "uuid",
          "example": "Success"
        },
        "errorMessage": {
          "type": "string",
          "format": "uuid",
          "example": "NA"
        },
        "requestId": {
          "type": "string",
          "format": "uuid",
          "example": "SR00001"
        }
      }
    },
    "ResetPasswordResponse": {
      "type": "object",
      "required": [
        "status",
        "errorMessage",
        "url"
      ],
      "properties": {
        "status": {
          "type": "string",
          "format": "uuid",
          "example": "Success"
        },
        "errorMessage": {
          "type": "string",
          "format": "uuid",
          "example": "NA"
        },
        "url": {
          "type": "string",
          "format": "uuid",
          "example": "http://localhost/"
        }
      }
    },
    "InstallRequest": {
      "type": "object",
      "required": [
        "serialNum",
        "assetid",
        "deviceId_oracle",
        "deviceId_azure",
        "modelNum",
        "dataRecipeVer",
        "appUIVer",
        "NetworkConnection",
        "Firmware",
        "requestedPartnerId",
        "KADAccountName",
        "BusinessAccountId",
        "BusinessAccountName",
        "contactId",
        "Scanned",
        "RequestorUserName",
        "RequestorFirstName",
        "RequestorLastName"
      ],
      "properties": {
       "serialNum": {
          "type": "string",
          "format": "uuid",
          "example": "4500.000.0000"
        },
        "assetId": {
          "type": "string",
          "format": "uuid",
          "example": "IB ID - PARTY"
        },
        "deviceId_oracle": {
          "type": "string",
          "format": "uuid",
          "example": "Oracle IOT ID"
        },
         "deviceId_azure": {
          "type": "string",
          "format": "uuid",
          "example": "AZURE IOT ID"
        },
        "modelNum": {
          "type": "string",
          "format": "uuid",
          "example": "K4500"
        },
        "dataRecipeVer": {
          "type": "string",
          "format": "uuid",
          "example": "1.41.15.15"
        },
        "appUIVer": {
          "type": "string",
          "format": "uuid",
          "example": "2.55.186"
        },
        "NetworkConnection": {
          "type": "string",
          "format": "uuid",
          "example": "Connected"
        },
        "Firmware": {
          "type": "string",
          "format": "uuid",
          "example": "2.55.186"
        },
        "requestedPartnerId": {
          "type": "string",
          "format": "uuid",
          "example": "Success"
        },
        "KADAccountName": {
          "type": "string",
          "format": "uuid",
          "example": "Arndorfer HQ"
        },
        "BusinessAccountId": {
          "type": "string",
          "format": "uuid",
          "example": "FSN123456"
        },
        "BusinessAccountName": {
          "type": "string",
          "format": "uuid",
          "example": "Arndorfer Enterprises"
        },
        "brewerLocation": {
          "type": "string",
          "format": "uuid",
          "example": "Kitchen Counter"
        },
        "contactId": {
          "type": "string",
          "format": "uuid",
          "example": "FSN123456"
        },
        "Scanned": {
          "type": "boolean",
          "format": "uuid",
          "example": "TRUE"
        },
        "RequestorUserName": {
          "type": "string",
          "format": "uuid",
          "example": "bryan.arndorfer_ex@kdrp.com"
        },
        "RequestorFirstName": {
          "type": "string",
          "format": "uuid",
          "example": "Bryan"
        },
        "RequestorLastName": {
          "type": "string",
          "format": "uuid",
          "example": "Arndorfer"
        }
      }
    },
    "AccountLOV": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "accountLOVs": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "format": "uuid",
              "example": "W B Mason"
            },
            "accountId": {
              "type": "string",
              "format": "uuid",
              "example": "00000000123abc"
            },
            "accountNumber": {
              "type": "string",
              "format": "uuid",
              "example": "a0000000123abc"
            }
          },
          "example": [
            {
              "name": "W B Mason",
              "accountId": "00000000123a",
              "accountNumber": "a00000000123a"
            },
            {
              "name": "Staples, Inc",
              "accountId": "00000000123b",
              "accountNumber": "a00000000123a"
            }
          ]
        }
      }
    },
    "ContactLOV": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "contactLOVs": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "format": "uuid"
            },
            "contactId": {
              "type": "string",
              "format": "uuid"
            },
            "contactNumber": {
              "type": "string",
              "format": "uuid"
            }
          },
          "example": [
            {
              "name": "John Smith",
              "contactId": "00000000123a",
              "contactNumber": "c00000000123a"
            },
            {
              "name": "Sara Smith",
              "contactId": "00000000123b",
              "contactNumber": "c00000000123b"
            },
            {
              "name": "Mark Taylor",
              "contactId": "00000000123c",
              "contactNumber": "c00000000123c"
            }
          ]
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "format": "uuid",
          "example": "FirstName"
        },
        "lastName": {
          "type": "string",
          "format": "uuid",
          "example": "LastName"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "UserId"
        },
        "emailAddress": {
          "type": "string",
          "format": "uuid",
          "example": "abc@test.com"
        },
        "phoneNumber": {
          "type": "string",
          "format": "uuid",
          "example": "888-888-8888"
        },
        "role": {
          "type": "string",
          "format": "uuid",
          "example": "Technician"
        },
        "status": {
          "type": "string",
          "format": "SUCCESS",
          "example": "Active"
        },
        "primaryAccPartyNum": {
          "type": "string",
          "format": "uuid",
          "example": "0000000123"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "dateDeactivated": {
          "type": "string",
          "format": "uuid",
          "example": "N/A"
        },
        "dateActivated": {
          "type": "string",
          "format": "uuid",
          "example": "01/01/2020"
        },
        "lastLoginTime": {
          "type": "string",
          "format": "uuid",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "oktaId": {
          "type": "string",
          "format": "uuid",
          "example": "okta00000001"
        },
        "idcsId": {
          "type": "string",
          "format": "uuid",
          "example": "idcs0000001"
        },
        "accountrel": {
          "type": "object",
          "description": "list of accounts associated with contact- constrained by requester's access",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int64",
              "example": 2
            },
            "accounts": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "format": "uuid"
                },
                "partyNum": {
                  "type": "string",
                  "format": "uuid"
                },
                "dateAdded": {
                  "type": "string",
                  "format": "uuid"
                },
                "status": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "example": [
                {
                  "name": "KAD Account Number 1",
                  "partyNum": "p00908098a",
                  "dateAdded": "05/14/2019",
                  "status": "Primary"
                },
                {
                  "name": "KAD Account Number 2",
                  "partyNum": "p00908098b",
                  "dateAdded": "05/14/2019",
                  "status": null
                }
              ]
            }
          }
        },
        "notifications": {
          "type": "object",
          "properties": {
            "overHeated": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "reqDscale": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "binFull": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "noNetworkConn": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "disconnectedMajor": {
              "type": "string",
              "format": "uuid",
              "example": false
            }
          }
        }
      }
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "format": "uuid",
          "example": "FirstName"
        },
        "lastName": {
          "type": "string",
          "format": "uuid",
          "example": "LastName"
        },
        "emailAddress": {
          "type": "string",
          "format": "uuid",
          "example": "abc@test.com"
        },
        "phoneNumber": {
          "type": "string",
          "format": "uuid",
          "example": "888-888-8888"
        },
        "role": {
          "type": "string",
          "format": "uuid",
          "example": "Technician"
        },
        "primaryAccPartyNum": {
          "type": "string",
          "format": "uuid",
          "example": "0000000123"
        },
        "oktaId": {
          "type": "string",
          "format": "uuid",
          "example": null
        },
        "idcsId": {
          "type": "string",
          "format": "uuid",
          "example": null
        },
        "source": {
          "type": "string",
          "format": "uuid",
          "example": "AMP"
        },
        "accountrel": {
          "type": "object",
          "description": "list of accounts associated with contact- constrained by requester's access",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int64",
              "example": 2
            },
            "accounts": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "format": "uuid"
                },
                "partyNum": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "example": [
                {
                  "name": "KAD Account Number 1",
                  "partyNum": "p00908098a"
                },
                {
                  "name": "KAD Account Number 2",
                  "partyNum": "p00908098b"
                }
              ]
            }
          }
        },
        "notifications": {
          "type": "object",
          "properties": {
            "overHeated": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "reqDscale": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "binFull": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "noNetworkConn": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "disconnectedMajor": {
              "type": "string",
              "format": "uuid",
              "example": false
            }
          }
        }
      }
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "format": "uuid",
          "example": "FirstName"
        },
        "lastName": {
          "type": "string",
          "format": "uuid",
          "example": "LastName"
        },
        "emailAddress": {
          "type": "string",
          "format": "uuid",
          "example": "abc@test.com"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "UserId"
        },
        "phoneNumber": {
          "type": "string",
          "format": "uuid",
          "example": "888-888-8888"
        },
        "role": {
          "type": "string",
          "format": "uuid",
          "example": "Technician"
        },
        "primaryAccPartyNum": {
          "type": "string",
          "format": "uuid",
          "example": "0000000123"
        },
        "oktaId": {
          "type": "string",
          "format": "uuid",
          "example": "okta000001"
        },
        "idcsId": {
          "type": "string",
          "format": "uuid",
          "example": "idcs000001"
        },
        "source": {
          "type": "string",
          "format": "uuid",
          "example": "AMP"
        },
        "accountrel": {
          "type": "object",
          "description": "list of accounts associated with contact- constrained by requester's access",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int64",
              "example": 2
            },
            "accounts": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "format": "uuid"
                },
                "partyNum": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "example": [
                {
                  "name": "KAD Account Number 1",
                  "partyNum": "p00908098a"
                },
                {
                  "name": "KAD Account Number 2",
                  "partyNum": "p00908098b"
                }
              ]
            }
          }
        },
        "notifications": {
          "type": "object",
          "properties": {
            "overHeated": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "reqDscale": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "binFull": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "noNetworkConn": {
              "type": "string",
              "format": "uuid",
              "example": false
            },
            "disconnectedMajor": {
              "type": "string",
              "format": "uuid",
              "example": false
            }
          }
        }
      }
    },
    "UserLite": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "uuid",
          "example": "test@test.com"
        },
        "userPartyNum": {
          "type": "string",
          "format": "uuid",
          "example": "u000003uu3u1"
        },
        "accountPartyNum": {
          "type": "string",
          "format": "uuid",
          "example": "a000003i3s"
        },
        "idcsId": {
          "type": "string",
          "format": "uuid",
          "example": "idcs0000001"
        },
        "oktaId": {
          "type": "string",
          "format": "uuid",
          "example": "okta0000001"
        }
      }
    },
    "UserAccess": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "uuid",
          "example": "test@test.com"
        },
        "userPartyNum": {
          "type": "string",
          "format": "uuid",
          "example": "u000003uu3u1"
        },
        "accountPartyNum": {
          "type": "string",
          "format": "uuid",
          "example": "a000003i3s"
        },
        "role": {
          "type": "string",
          "format": "uuid",
          "example": "Technician"
        },
        "status": {
          "type": "string",
          "format": "uuid",
          "example": "active"
        }
      }
    }
  },
  "parameters": {
    "requesterID": {
      "in": "header",
      "name": "X-Requester-ID",
      "type": "string",
      "required": true,
      "description": "pass the userId for the requester as a header variable"
    },
    "header_partnerID": {
      "in": "header",
      "name": "X-Partner-ID",
      "type": "string",
      "required": true,
      "description": "pass the Partner Accpunt ID of the user as a path parameter"
    },
    "query_partnerId": {
      "in": "query",
      "name": "partnerId",
      "type": "string",
      "required": false,
      "description": "pass the Partner Accpunt ID of the user as a query parameter"
    },
    "path_partnerId": {
      "in": "path",
      "name": "partnerId",
      "type": "string",
      "required": true,
      "description": "pass the Partner Accpunt ID of the user as a path parameter"
    },
    "PlaylistId": {
      "in": "path",
      "name": "PlaylistId",
      "type": "string",
      "required": true,
      "description": "pass the PlaylistId of the playlist as a path parameter"
    },
    "userId": {
      "in": "path",
      "name": "userId",
      "type": "string",
      "required": true,
      "description": "pass the userId for the requester as a path variable"
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://example.com/oauth/authorize",
      "tokenUrl": "https://example.com/oauth/token",
      "scopes": {
        "read": "Grants read access",
        "write": "Grants write access",
        "admin": "Grants read and write access to administrative information"
      }
    },
    "basicAuth": {
      "type": "basic"
    }
  }
}
